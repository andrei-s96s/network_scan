#!/usr/bin/env python3
"""
–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–¥–∞—á –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
"""

import time
import json
import requests
from datetime import datetime
from rich.console import Console
from rich.table import Table
from rich.live import Live
from rich.panel import Panel

console = Console()

def get_tasks():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á —Å API"""
    try:
        response = requests.get('http://localhost:5000/api/tasks')
        if response.status_code == 200:
            return response.json()
        else:
            console.print(f"[red]–û—à–∏–±–∫–∞ API: {response.status_code}[/red]")
            return {}
    except Exception as e:
        console.print(f"[red]–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}[/red]")
        return {}

def get_status_emoji(status):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞"""
    emojis = {
        'pending': '‚è≥',
        'running': 'üîÑ',
        'completed': '‚úÖ',
        'failed': '‚ùå',
        'cancelled': 'üö´',
        'paused': '‚è∏Ô∏è'
    }
    return emojis.get(status, '‚ùì')

def create_table(tasks):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Å –∑–∞–¥–∞—á–∞–º–∏"""
    table = Table(title="üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–¥–∞—á")
    
    table.add_column("ID", style="cyan", width=10)
    table.add_column("–ò–º—è", style="green", width=20)
    table.add_column("–°–µ—Ç—å", style="blue", width=15)
    table.add_column("–°—Ç–∞—Ç—É—Å", style="yellow", width=12)
    table.add_column("–ü—Ä–æ–≥—Ä–µ—Å—Å", style="magenta", width=15)
    table.add_column("–°–æ–∑–¥–∞–Ω–∞", style="white", width=20)
    
    if not tasks:
        table.add_row("", "–ù–µ—Ç –∑–∞–¥–∞—á", "", "", "", "")
    else:
        for task_id, task in tasks.items():
            status_emoji = get_status_emoji(task['status'])
            progress_text = f"{task['progress']:.1f}%"
            if task['status'] == 'running':
                progress_text += f" ({task['scanned_hosts']}/{task['total_hosts']})"
            
            created_time = datetime.fromisoformat(task['created_at']).strftime('%H:%M:%S')
            
            table.add_row(
                task_id[:8],
                task['name'][:18],
                task['network'],
                f"{status_emoji} {task['status']}",
                progress_text,
                created_time
            )
    
    return table

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    console.print("[bold blue]üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–¥–∞—á —Å–µ—Ç–µ–≤–æ–≥–æ —Å–∫–∞–Ω–µ—Ä–∞[/bold blue]")
    console.print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞\n")
    
    def generate_table():
        tasks = get_tasks()
        return create_table(tasks)
    
    with Live(generate_table(), refresh_per_second=2, screen=True) as live:
        try:
            while True:
                live.update(generate_table())
                time.sleep(2)
        except KeyboardInterrupt:
            console.print("\n[yellow]–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω[/yellow]")

if __name__ == "__main__":
    main()
