[project]
name = "network-scanner"
version = "2.0.0"
description = "Network Scanner with Web Interface and Docker Support"
authors = [
    {name = "Network Scanner Team", email = "team@network-scanner.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: System :: Networking :: Monitoring",
    "Topic :: Security",
]
keywords = ["network", "scanner", "security", "docker", "web-interface"]
dependencies = [
    "flask>=3.0.0",
    "asyncio-mqtt>=0.16.0",
    "python-telegram-bot>=20.0",
    "psutil>=5.9.0",
    "playwright>=1.40.0",
    "aiofiles>=23.0.0",
    "pyyaml>=6.0",
    "requests>=2.31.0",
    "websockets>=12.0",
    "python-socketio>=5.10.0",
    "flask-socketio>=5.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/andrei-s96s/network_scan"
Documentation = "https://github.com/andrei-s96s/network_scan#readme"
Repository = "https://github.com/andrei-s96s/network_scan"
Issues = "https://github.com/andrei-s96s/network_scan/issues"
Docker = "https://hub.docker.com/r/andreis1s/net_scan"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["config", "network_scanner", "screenshot_manager", "report_generator", "main"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "playwright.*",
    "tqdm.*",
    "urllib3.*",
    "pytest.*",
    "flake8.*",
    "black.*",
    "bandit.*",
    "safety.*",
    "click.*",
    "rich.*",
]
ignore_missing_imports = true
